"""
Django settings for NomNomNow project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import sys 
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x(7@ck_5i#_y5w-#!r_jhl5#u$1&nb7u21te3t3uc#!&zv531k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost", "testserver", "cdimop.pythonanywhere.com"]









INSTALLED_APPS = [
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    #'allauth.socialaccount.providers.facebook',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django_extensions',
    'widget_tweaks',
    'home',
    'platform_db',
    'finish_order',
    'contact',
    'aboutus',
    'checkout',
    'search', 
    'chatbot',
    'restaurant_manager',

]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

# General Allauth Settings
SITE_ID = 2  # Ensure this matches your Django Sites ID
ACCOUNT_AUTHENTICATION_METHOD = "email"  # Login with email instead of username
ACCOUNT_EMAIL_REQUIRED = True  # Email is required for all users
ACCOUNT_USERNAME_REQUIRED = False  # Disable username requirement
SOCIALACCOUNT_AUTO_SIGNUP = True  # Automatically create accounts from social logins

# Redirects
LOGIN_REDIRECT_URL = '/platform_db/redirect-after-login/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'  # Redirect after logout
ACCOUNT_SIGNUP_REDIRECT_URL = "/platform_db/complete-signup/"  

# Social Account Adapter (Optional)
SOCIALACCOUNT_ADAPTER = "platform_db.adapters.MySocialAccountAdapter"

# Email Settings for Social Accounts
SOCIALACCOUNT_EMAIL_REQUIRED = True  # Require email for social logins
SOCIALACCOUNT_EMAIL_VERIFICATION = "optional"  # Can be "mandatory" if you want verification

# Username Generation Adapter
ACCOUNT_ADAPTER = "allauth.account.adapter.DefaultAccountAdapter"  

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['openid', 'profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
    },
    #'facebook': {
    #    'METHOD': 'oauth2',
    #    'SCOPE': ['email', 'public_profile'],
    #    'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
    #    'INIT_PARAMS': {'cookie': True},
    #    'FIELDS': ['id', 'email', 'first_name', 'last_name'],
    #    'EXCHANGE_TOKEN': True,
    #    'VERIFIED_EMAIL': False,
    #    'VERSION': 'v18.0',
    #}
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com' # Example using Gmail
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'chris.k.dimopoulos@gmail.com'
EMAIL_HOST_PASSWORD = 'mbntafphnicbijcw'

DEFAULT_FROM_EMAIL = 'NomNomNow <chris.k.dimopoulos@gmail.com>'






AUTH_USER_MODEL = 'platform_db.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]




ROOT_URLCONF = 'NomNomNow.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'platform_db.views.cart_item_count',
            ],
        },
    },
]


WSGI_APPLICATION = 'NomNomNow.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') 
STATICFILES_DIRS = [BASE_DIR / 'static']
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

MEDIA_URL = '/media/'  # URL path to access media files in the browser
MEDIA_ROOT = BASE_DIR /'media' # Directory where media files are stored on the server

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




